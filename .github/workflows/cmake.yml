name: CMake CI

on:
  push:
    branches: ["main"]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}-${{ matrix.config.os-version }}

    strategy:
      fail-fast: false
      matrix:

        config:
          - name: Windows MSVC Release
            os: windows
            os-version: 2022
            msvc: true
            buildtype: Release
          - name: Linux Release
            os: ubuntu
            os-version: 22.04
            buildtype: Release

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - name: Setup MSVC
        if: matrix.config.os == 'windows' && matrix.config.msvc == true
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64
          toolset: 14.39

      - name: Install dependencies (Linux)
        if: matrix.config.os == 'ubuntu'
        shell: bash
        run: |
          sudo apt-get update
          sudo apt install curl pkg-config zip unzip tar cmake git -y

      - name: Install cmake 3.29.0 and ninja
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: 3.29.0

      - name: Setup GCC (Linux)
        if: matrix.config.os == 'ubuntu'
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 13
          platform: x64

      - name: Configure CMake
        run: cmake -B ./build -DCMAKE_BUILD_TYPE=${{ matrix.config.buildtype }} -DCMAKE_TOOLCHAIN_FILE="${{matrix.config.os == 'windows' && 'C:/vcpkg' || '/usr/local/share/vcpkg'}}/scripts/buildsystems/vcpkg.cmake" . -DVCPKG_TARGET_TRIPLET="${{ matrix.config.os == 'windows' && 'x64-windows-static' || 'x64-linux' }}" -G Ninja

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ./build -j --config ${{ matrix.config.buildtype }}

      - name: Upload artifacts - Linux
        uses: actions/upload-artifact@v4
        if: matrix.config.os == 'ubuntu'
        with:
          name: ${{ matrix.config.name }} Executable
          path: build/oopetris

      - name: Upload artifacts - Windows
        uses: actions/upload-artifact@v4
        if: matrix.config.os == 'windows'
        with:
          name: ${{ matrix.config.name }} Executable
          path: build\oopetris.exe
